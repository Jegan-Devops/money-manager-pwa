{"ast":null,"code":"var _jsxFileName = \"/workspaces/money-manager-pwa/money-manager-pwa/src/contexts/FinanceContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { format, startOfMonth, endOfMonth, isWithinInterval } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinanceContext = /*#__PURE__*/createContext();\n\n// Default categories matching Money Manager app\nconst defaultCategories = {\n  expense: [{\n    id: 'food',\n    name: 'Food & Dining',\n    icon: '🍽️',\n    color: '#ef4444'\n  }, {\n    id: 'transport',\n    name: 'Transportation',\n    icon: '🚗',\n    color: '#3b82f6'\n  }, {\n    id: 'shopping',\n    name: 'Shopping',\n    icon: '🛒',\n    color: '#8b5cf6'\n  }, {\n    id: 'entertainment',\n    name: 'Entertainment',\n    icon: '🎬',\n    color: '#f59e0b'\n  }, {\n    id: 'bills',\n    name: 'Bills & Utilities',\n    icon: '📄',\n    color: '#10b981'\n  }, {\n    id: 'healthcare',\n    name: 'Healthcare',\n    icon: '🏥',\n    color: '#ec4899'\n  }, {\n    id: 'education',\n    name: 'Education',\n    icon: '📚',\n    color: '#6366f1'\n  }, {\n    id: 'travel',\n    name: 'Travel',\n    icon: '✈️',\n    color: '#14b8a6'\n  }, {\n    id: 'personal',\n    name: 'Personal Care',\n    icon: '💄',\n    color: '#f97316'\n  }, {\n    id: 'other_expense',\n    name: 'Other Expenses',\n    icon: '📋',\n    color: '#6b7280'\n  }],\n  income: [{\n    id: 'salary',\n    name: 'Salary',\n    icon: '💼',\n    color: '#10b981'\n  }, {\n    id: 'freelance',\n    name: 'Freelance',\n    icon: '💻',\n    color: '#3b82f6'\n  }, {\n    id: 'investment',\n    name: 'Investment',\n    icon: '📈',\n    color: '#8b5cf6'\n  }, {\n    id: 'business',\n    name: 'Business',\n    icon: '🏢',\n    color: '#f59e0b'\n  }, {\n    id: 'gift',\n    name: 'Gift',\n    icon: '🎁',\n    color: '#ec4899'\n  }, {\n    id: 'other_income',\n    name: 'Other Income',\n    icon: '💰',\n    color: '#6b7280'\n  }]\n};\nconst defaultBudgets = [{\n  id: 'food',\n  categoryId: 'food',\n  amount: 500,\n  period: 'monthly'\n}, {\n  id: 'transport',\n  categoryId: 'transport',\n  amount: 200,\n  period: 'monthly'\n}, {\n  id: 'entertainment',\n  categoryId: 'entertainment',\n  amount: 150,\n  period: 'monthly'\n}, {\n  id: 'shopping',\n  categoryId: 'shopping',\n  amount: 300,\n  period: 'monthly'\n}];\n\n// Initial state\nconst initialState = {\n  transactions: [],\n  categories: defaultCategories,\n  budgets: defaultBudgets,\n  currency: '$',\n  settings: {\n    theme: 'light',\n    notifications: true,\n    currency: 'USD',\n    budgetAlerts: true\n  },\n  loading: false,\n  error: null\n};\n\n// Action types\nconst actionTypes = {\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  ADD_TRANSACTION: 'ADD_TRANSACTION',\n  UPDATE_TRANSACTION: 'UPDATE_TRANSACTION',\n  DELETE_TRANSACTION: 'DELETE_TRANSACTION',\n  ADD_CATEGORY: 'ADD_CATEGORY',\n  UPDATE_CATEGORY: 'UPDATE_CATEGORY',\n  DELETE_CATEGORY: 'DELETE_CATEGORY',\n  SET_BUDGET: 'SET_BUDGET',\n  UPDATE_SETTINGS: 'UPDATE_SETTINGS',\n  IMPORT_DATA: 'IMPORT_DATA',\n  RESET_DATA: 'RESET_DATA'\n};\n\n// Reducer function\nconst financeReducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case actionTypes.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case actionTypes.ADD_TRANSACTION:\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions]\n      };\n    case actionTypes.UPDATE_TRANSACTION:\n      return {\n        ...state,\n        transactions: state.transactions.map(transaction => transaction.id === action.payload.id ? action.payload : transaction)\n      };\n    case actionTypes.DELETE_TRANSACTION:\n      return {\n        ...state,\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n      };\n    case actionTypes.ADD_CATEGORY:\n      const {\n        type,\n        category\n      } = action.payload;\n      return {\n        ...state,\n        categories: {\n          ...state.categories,\n          [type]: [...state.categories[type], category]\n        }\n      };\n    case actionTypes.UPDATE_CATEGORY:\n      return {\n        ...state,\n        categories: {\n          ...state.categories,\n          [action.payload.type]: state.categories[action.payload.type].map(cat => cat.id === action.payload.category.id ? action.payload.category : cat)\n        }\n      };\n    case actionTypes.DELETE_CATEGORY:\n      return {\n        ...state,\n        categories: {\n          ...state.categories,\n          [action.payload.type]: state.categories[action.payload.type].filter(cat => cat.id !== action.payload.categoryId)\n        }\n      };\n    case actionTypes.SET_BUDGET:\n      return {\n        ...state,\n        budgets: state.budgets.some(b => b.id === action.payload.id) ? state.budgets.map(budget => budget.id === action.payload.id ? action.payload : budget) : [...state.budgets, action.payload]\n      };\n    case actionTypes.UPDATE_SETTINGS:\n      return {\n        ...state,\n        settings: {\n          ...state.settings,\n          ...action.payload\n        }\n      };\n    case actionTypes.IMPORT_DATA:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case actionTypes.RESET_DATA:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\n// Custom hooks for calculations\nconst useFinanceCalculations = state => {\n  const getCurrentMonthTransactions = () => {\n    const now = new Date();\n    const monthStart = startOfMonth(now);\n    const monthEnd = endOfMonth(now);\n    return state.transactions.filter(transaction => {\n      const transactionDate = new Date(transaction.date);\n      return isWithinInterval(transactionDate, {\n        start: monthStart,\n        end: monthEnd\n      });\n    });\n  };\n  const getTotalIncome = (transactions = null) => {\n    const txns = transactions || getCurrentMonthTransactions();\n    return txns.filter(t => t.type === 'income').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n  };\n  const getTotalExpenses = (transactions = null) => {\n    const txns = transactions || getCurrentMonthTransactions();\n    return txns.filter(t => t.type === 'expense').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n  };\n  const getBalance = (transactions = null) => {\n    const txns = transactions || getCurrentMonthTransactions();\n    return getTotalIncome(txns) - getTotalExpenses(txns);\n  };\n  const getCategorySpending = (categoryId, period = 'monthly') => {\n    const now = new Date();\n    let startDate, endDate;\n    if (period === 'monthly') {\n      startDate = startOfMonth(now);\n      endDate = endOfMonth(now);\n    } else {\n      // Weekly or other periods can be added here\n      startDate = startOfMonth(now);\n      endDate = endOfMonth(now);\n    }\n    return state.transactions.filter(t => t.type === 'expense' && t.categoryId === categoryId && isWithinInterval(new Date(t.date), {\n      start: startDate,\n      end: endDate\n    })).reduce((sum, t) => sum + parseFloat(t.amount), 0);\n  };\n  const getBudgetStatus = () => {\n    return state.budgets.map(budget => {\n      const spent = getCategorySpending(budget.categoryId, budget.period);\n      const category = state.categories.expense.find(c => c.id === budget.categoryId);\n      return {\n        ...budget,\n        spent,\n        remaining: budget.amount - spent,\n        percentage: budget.amount > 0 ? spent / budget.amount * 100 : 0,\n        isOverBudget: spent > budget.amount,\n        category\n      };\n    });\n  };\n  const getExpensesByCategory = () => {\n    const monthTransactions = getCurrentMonthTransactions().filter(t => t.type === 'expense');\n    const categoryTotals = {};\n    state.categories.expense.forEach(category => {\n      const total = monthTransactions.filter(t => t.categoryId === category.id).reduce((sum, t) => sum + parseFloat(t.amount), 0);\n      if (total > 0) {\n        categoryTotals[category.id] = {\n          ...category,\n          amount: total,\n          percentage: 0 // Will be calculated after we have the total\n        };\n      }\n    });\n    const totalExpenses = Object.values(categoryTotals).reduce((sum, cat) => sum + cat.amount, 0);\n\n    // Calculate percentages\n    Object.keys(categoryTotals).forEach(key => {\n      categoryTotals[key].percentage = totalExpenses > 0 ? categoryTotals[key].amount / totalExpenses * 100 : 0;\n    });\n    return Object.values(categoryTotals).sort((a, b) => b.amount - a.amount);\n  };\n  return {\n    getCurrentMonthTransactions,\n    getTotalIncome,\n    getTotalExpenses,\n    getBalance,\n    getCategorySpending,\n    getBudgetStatus,\n    getExpensesByCategory\n  };\n};\n\n// Provider component\nexport const FinanceProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(financeReducer, initialState);\n  const calculations = useFinanceCalculations(state);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const savedData = localStorage.getItem('moneyManagerData');\n    if (savedData) {\n      try {\n        const parsedData = JSON.parse(savedData);\n        dispatch({\n          type: actionTypes.IMPORT_DATA,\n          payload: parsedData\n        });\n      } catch (error) {\n        console.error('Error loading saved data:', error);\n      }\n    }\n  }, []);\n\n  // Save data to localStorage whenever state changes\n  useEffect(() => {\n    const dataToSave = {\n      transactions: state.transactions,\n      categories: state.categories,\n      budgets: state.budgets,\n      settings: state.settings\n    };\n    localStorage.setItem('moneyManagerData', JSON.stringify(dataToSave));\n  }, [state.transactions, state.categories, state.budgets, state.settings]);\n\n  // Action creators\n  const actions = {\n    setLoading: loading => dispatch({\n      type: actionTypes.SET_LOADING,\n      payload: loading\n    }),\n    setError: error => dispatch({\n      type: actionTypes.SET_ERROR,\n      payload: error\n    }),\n    addTransaction: transaction => {\n      const newTransaction = {\n        ...transaction,\n        id: Date.now().toString(),\n        date: transaction.date || new Date().toISOString(),\n        createdAt: new Date().toISOString()\n      };\n      dispatch({\n        type: actionTypes.ADD_TRANSACTION,\n        payload: newTransaction\n      });\n      return newTransaction;\n    },\n    updateTransaction: transaction => {\n      dispatch({\n        type: actionTypes.UPDATE_TRANSACTION,\n        payload: transaction\n      });\n    },\n    deleteTransaction: id => {\n      dispatch({\n        type: actionTypes.DELETE_TRANSACTION,\n        payload: id\n      });\n    },\n    addCategory: (type, category) => {\n      const newCategory = {\n        ...category,\n        id: category.id || Date.now().toString()\n      };\n      dispatch({\n        type: actionTypes.ADD_CATEGORY,\n        payload: {\n          type,\n          category: newCategory\n        }\n      });\n      return newCategory;\n    },\n    updateCategory: (type, category) => {\n      dispatch({\n        type: actionTypes.UPDATE_CATEGORY,\n        payload: {\n          type,\n          category\n        }\n      });\n    },\n    deleteCategory: (type, categoryId) => {\n      dispatch({\n        type: actionTypes.DELETE_CATEGORY,\n        payload: {\n          type,\n          categoryId\n        }\n      });\n    },\n    setBudget: budget => {\n      const newBudget = {\n        ...budget,\n        id: budget.id || `${budget.categoryId}_${budget.period}`\n      };\n      dispatch({\n        type: actionTypes.SET_BUDGET,\n        payload: newBudget\n      });\n      return newBudget;\n    },\n    updateSettings: settings => {\n      dispatch({\n        type: actionTypes.UPDATE_SETTINGS,\n        payload: settings\n      });\n    },\n    exportData: () => {\n      const dataToExport = {\n        transactions: state.transactions,\n        categories: state.categories,\n        budgets: state.budgets,\n        settings: state.settings,\n        exportDate: new Date().toISOString(),\n        version: '1.0'\n      };\n      return dataToExport;\n    },\n    importData: data => {\n      dispatch({\n        type: actionTypes.IMPORT_DATA,\n        payload: data\n      });\n    },\n    resetData: () => {\n      if (window.confirm('Are you sure you want to reset all data? This action cannot be undone.')) {\n        dispatch({\n          type: actionTypes.RESET_DATA\n        });\n        localStorage.removeItem('moneyManagerData');\n      }\n    }\n  };\n  const value = {\n    ...state,\n    ...calculations,\n    ...actions\n  };\n  return /*#__PURE__*/_jsxDEV(FinanceContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the finance context\n_s(FinanceProvider, \"1Fg9av/bnPKXKFAtug0FuYv4N2A=\", false, function () {\n  return [useFinanceCalculations];\n});\n_c = FinanceProvider;\nexport const useFinance = () => {\n  _s2();\n  const context = useContext(FinanceContext);\n  if (!context) {\n    throw new Error('useFinance must be used within a FinanceProvider');\n  }\n  return context;\n};\n_s2(useFinance, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default FinanceContext;\nvar _c;\n$RefreshReg$(_c, \"FinanceProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","format","startOfMonth","endOfMonth","isWithinInterval","jsxDEV","_jsxDEV","FinanceContext","defaultCategories","expense","id","name","icon","color","income","defaultBudgets","categoryId","amount","period","initialState","transactions","categories","budgets","currency","settings","theme","notifications","budgetAlerts","loading","error","actionTypes","SET_LOADING","SET_ERROR","ADD_TRANSACTION","UPDATE_TRANSACTION","DELETE_TRANSACTION","ADD_CATEGORY","UPDATE_CATEGORY","DELETE_CATEGORY","SET_BUDGET","UPDATE_SETTINGS","IMPORT_DATA","RESET_DATA","financeReducer","state","action","type","payload","map","transaction","filter","category","cat","some","b","budget","useFinanceCalculations","getCurrentMonthTransactions","now","Date","monthStart","monthEnd","transactionDate","date","start","end","getTotalIncome","txns","t","reduce","sum","parseFloat","getTotalExpenses","getBalance","getCategorySpending","startDate","endDate","getBudgetStatus","spent","find","c","remaining","percentage","isOverBudget","getExpensesByCategory","monthTransactions","categoryTotals","forEach","total","totalExpenses","Object","values","keys","key","sort","a","FinanceProvider","children","_s","dispatch","calculations","savedData","localStorage","getItem","parsedData","JSON","parse","console","dataToSave","setItem","stringify","actions","setLoading","setError","addTransaction","newTransaction","toString","toISOString","createdAt","updateTransaction","deleteTransaction","addCategory","newCategory","updateCategory","deleteCategory","setBudget","newBudget","updateSettings","exportData","dataToExport","exportDate","version","importData","data","resetData","window","confirm","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFinance","_s2","context","Error","$RefreshReg$"],"sources":["/workspaces/money-manager-pwa/money-manager-pwa/src/contexts/FinanceContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { format, startOfMonth, endOfMonth, isWithinInterval } from 'date-fns';\n\nconst FinanceContext = createContext();\n\n// Default categories matching Money Manager app\nconst defaultCategories = {\n  expense: [\n    { id: 'food', name: 'Food & Dining', icon: '🍽️', color: '#ef4444' },\n    { id: 'transport', name: 'Transportation', icon: '🚗', color: '#3b82f6' },\n    { id: 'shopping', name: 'Shopping', icon: '🛒', color: '#8b5cf6' },\n    { id: 'entertainment', name: 'Entertainment', icon: '🎬', color: '#f59e0b' },\n    { id: 'bills', name: 'Bills & Utilities', icon: '📄', color: '#10b981' },\n    { id: 'healthcare', name: 'Healthcare', icon: '🏥', color: '#ec4899' },\n    { id: 'education', name: 'Education', icon: '📚', color: '#6366f1' },\n    { id: 'travel', name: 'Travel', icon: '✈️', color: '#14b8a6' },\n    { id: 'personal', name: 'Personal Care', icon: '💄', color: '#f97316' },\n    { id: 'other_expense', name: 'Other Expenses', icon: '📋', color: '#6b7280' }\n  ],\n  income: [\n    { id: 'salary', name: 'Salary', icon: '💼', color: '#10b981' },\n    { id: 'freelance', name: 'Freelance', icon: '💻', color: '#3b82f6' },\n    { id: 'investment', name: 'Investment', icon: '📈', color: '#8b5cf6' },\n    { id: 'business', name: 'Business', icon: '🏢', color: '#f59e0b' },\n    { id: 'gift', name: 'Gift', icon: '🎁', color: '#ec4899' },\n    { id: 'other_income', name: 'Other Income', icon: '💰', color: '#6b7280' }\n  ]\n};\n\nconst defaultBudgets = [\n  { id: 'food', categoryId: 'food', amount: 500, period: 'monthly' },\n  { id: 'transport', categoryId: 'transport', amount: 200, period: 'monthly' },\n  { id: 'entertainment', categoryId: 'entertainment', amount: 150, period: 'monthly' },\n  { id: 'shopping', categoryId: 'shopping', amount: 300, period: 'monthly' }\n];\n\n// Initial state\nconst initialState = {\n  transactions: [],\n  categories: defaultCategories,\n  budgets: defaultBudgets,\n  currency: '$',\n  settings: {\n    theme: 'light',\n    notifications: true,\n    currency: 'USD',\n    budgetAlerts: true\n  },\n  loading: false,\n  error: null\n};\n\n// Action types\nconst actionTypes = {\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  ADD_TRANSACTION: 'ADD_TRANSACTION',\n  UPDATE_TRANSACTION: 'UPDATE_TRANSACTION',\n  DELETE_TRANSACTION: 'DELETE_TRANSACTION',\n  ADD_CATEGORY: 'ADD_CATEGORY',\n  UPDATE_CATEGORY: 'UPDATE_CATEGORY',\n  DELETE_CATEGORY: 'DELETE_CATEGORY',\n  SET_BUDGET: 'SET_BUDGET',\n  UPDATE_SETTINGS: 'UPDATE_SETTINGS',\n  IMPORT_DATA: 'IMPORT_DATA',\n  RESET_DATA: 'RESET_DATA'\n};\n\n// Reducer function\nconst financeReducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_LOADING:\n      return { ...state, loading: action.payload };\n    \n    case actionTypes.SET_ERROR:\n      return { ...state, error: action.payload };\n    \n    case actionTypes.ADD_TRANSACTION:\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions]\n      };\n    \n    case actionTypes.UPDATE_TRANSACTION:\n      return {\n        ...state,\n        transactions: state.transactions.map(transaction =>\n          transaction.id === action.payload.id ? action.payload : transaction\n        )\n      };\n    \n    case actionTypes.DELETE_TRANSACTION:\n      return {\n        ...state,\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n      };\n    \n    case actionTypes.ADD_CATEGORY:\n      const { type, category } = action.payload;\n      return {\n        ...state,\n        categories: {\n          ...state.categories,\n          [type]: [...state.categories[type], category]\n        }\n      };\n    \n    case actionTypes.UPDATE_CATEGORY:\n      return {\n        ...state,\n        categories: {\n          ...state.categories,\n          [action.payload.type]: state.categories[action.payload.type].map(cat =>\n            cat.id === action.payload.category.id ? action.payload.category : cat\n          )\n        }\n      };\n    \n    case actionTypes.DELETE_CATEGORY:\n      return {\n        ...state,\n        categories: {\n          ...state.categories,\n          [action.payload.type]: state.categories[action.payload.type].filter(cat => cat.id !== action.payload.categoryId)\n        }\n      };\n    \n    case actionTypes.SET_BUDGET:\n      return {\n        ...state,\n        budgets: state.budgets.some(b => b.id === action.payload.id)\n          ? state.budgets.map(budget => budget.id === action.payload.id ? action.payload : budget)\n          : [...state.budgets, action.payload]\n      };\n    \n    case actionTypes.UPDATE_SETTINGS:\n      return {\n        ...state,\n        settings: { ...state.settings, ...action.payload }\n      };\n    \n    case actionTypes.IMPORT_DATA:\n      return {\n        ...state,\n        ...action.payload\n      };\n    \n    case actionTypes.RESET_DATA:\n      return initialState;\n    \n    default:\n      return state;\n  }\n};\n\n// Custom hooks for calculations\nconst useFinanceCalculations = (state) => {\n  const getCurrentMonthTransactions = () => {\n    const now = new Date();\n    const monthStart = startOfMonth(now);\n    const monthEnd = endOfMonth(now);\n    \n    return state.transactions.filter(transaction => {\n      const transactionDate = new Date(transaction.date);\n      return isWithinInterval(transactionDate, { start: monthStart, end: monthEnd });\n    });\n  };\n\n  const getTotalIncome = (transactions = null) => {\n    const txns = transactions || getCurrentMonthTransactions();\n    return txns\n      .filter(t => t.type === 'income')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n  };\n\n  const getTotalExpenses = (transactions = null) => {\n    const txns = transactions || getCurrentMonthTransactions();\n    return txns\n      .filter(t => t.type === 'expense')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n  };\n\n  const getBalance = (transactions = null) => {\n    const txns = transactions || getCurrentMonthTransactions();\n    return getTotalIncome(txns) - getTotalExpenses(txns);\n  };\n\n  const getCategorySpending = (categoryId, period = 'monthly') => {\n    const now = new Date();\n    let startDate, endDate;\n    \n    if (period === 'monthly') {\n      startDate = startOfMonth(now);\n      endDate = endOfMonth(now);\n    } else {\n      // Weekly or other periods can be added here\n      startDate = startOfMonth(now);\n      endDate = endOfMonth(now);\n    }\n    \n    return state.transactions\n      .filter(t => \n        t.type === 'expense' && \n        t.categoryId === categoryId &&\n        isWithinInterval(new Date(t.date), { start: startDate, end: endDate })\n      )\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n  };\n\n  const getBudgetStatus = () => {\n    return state.budgets.map(budget => {\n      const spent = getCategorySpending(budget.categoryId, budget.period);\n      const category = state.categories.expense.find(c => c.id === budget.categoryId);\n      \n      return {\n        ...budget,\n        spent,\n        remaining: budget.amount - spent,\n        percentage: budget.amount > 0 ? (spent / budget.amount) * 100 : 0,\n        isOverBudget: spent > budget.amount,\n        category\n      };\n    });\n  };\n\n  const getExpensesByCategory = () => {\n    const monthTransactions = getCurrentMonthTransactions().filter(t => t.type === 'expense');\n    const categoryTotals = {};\n    \n    state.categories.expense.forEach(category => {\n      const total = monthTransactions\n        .filter(t => t.categoryId === category.id)\n        .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n      \n      if (total > 0) {\n        categoryTotals[category.id] = {\n          ...category,\n          amount: total,\n          percentage: 0 // Will be calculated after we have the total\n        };\n      }\n    });\n    \n    const totalExpenses = Object.values(categoryTotals).reduce((sum, cat) => sum + cat.amount, 0);\n    \n    // Calculate percentages\n    Object.keys(categoryTotals).forEach(key => {\n      categoryTotals[key].percentage = totalExpenses > 0 \n        ? (categoryTotals[key].amount / totalExpenses) * 100 \n        : 0;\n    });\n    \n    return Object.values(categoryTotals).sort((a, b) => b.amount - a.amount);\n  };\n\n  return {\n    getCurrentMonthTransactions,\n    getTotalIncome,\n    getTotalExpenses,\n    getBalance,\n    getCategorySpending,\n    getBudgetStatus,\n    getExpensesByCategory\n  };\n};\n\n// Provider component\nexport const FinanceProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(financeReducer, initialState);\n  const calculations = useFinanceCalculations(state);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const savedData = localStorage.getItem('moneyManagerData');\n    if (savedData) {\n      try {\n        const parsedData = JSON.parse(savedData);\n        dispatch({ type: actionTypes.IMPORT_DATA, payload: parsedData });\n      } catch (error) {\n        console.error('Error loading saved data:', error);\n      }\n    }\n  }, []);\n\n  // Save data to localStorage whenever state changes\n  useEffect(() => {\n    const dataToSave = {\n      transactions: state.transactions,\n      categories: state.categories,\n      budgets: state.budgets,\n      settings: state.settings\n    };\n    localStorage.setItem('moneyManagerData', JSON.stringify(dataToSave));\n  }, [state.transactions, state.categories, state.budgets, state.settings]);\n\n  // Action creators\n  const actions = {\n    setLoading: (loading) => dispatch({ type: actionTypes.SET_LOADING, payload: loading }),\n    \n    setError: (error) => dispatch({ type: actionTypes.SET_ERROR, payload: error }),\n    \n    addTransaction: (transaction) => {\n      const newTransaction = {\n        ...transaction,\n        id: Date.now().toString(),\n        date: transaction.date || new Date().toISOString(),\n        createdAt: new Date().toISOString()\n      };\n      dispatch({ type: actionTypes.ADD_TRANSACTION, payload: newTransaction });\n      return newTransaction;\n    },\n    \n    updateTransaction: (transaction) => {\n      dispatch({ type: actionTypes.UPDATE_TRANSACTION, payload: transaction });\n    },\n    \n    deleteTransaction: (id) => {\n      dispatch({ type: actionTypes.DELETE_TRANSACTION, payload: id });\n    },\n    \n    addCategory: (type, category) => {\n      const newCategory = {\n        ...category,\n        id: category.id || Date.now().toString()\n      };\n      dispatch({ \n        type: actionTypes.ADD_CATEGORY, \n        payload: { type, category: newCategory }\n      });\n      return newCategory;\n    },\n    \n    updateCategory: (type, category) => {\n      dispatch({ \n        type: actionTypes.UPDATE_CATEGORY, \n        payload: { type, category }\n      });\n    },\n    \n    deleteCategory: (type, categoryId) => {\n      dispatch({ \n        type: actionTypes.DELETE_CATEGORY, \n        payload: { type, categoryId }\n      });\n    },\n    \n    setBudget: (budget) => {\n      const newBudget = {\n        ...budget,\n        id: budget.id || `${budget.categoryId}_${budget.period}`\n      };\n      dispatch({ type: actionTypes.SET_BUDGET, payload: newBudget });\n      return newBudget;\n    },\n    \n    updateSettings: (settings) => {\n      dispatch({ type: actionTypes.UPDATE_SETTINGS, payload: settings });\n    },\n    \n    exportData: () => {\n      const dataToExport = {\n        transactions: state.transactions,\n        categories: state.categories,\n        budgets: state.budgets,\n        settings: state.settings,\n        exportDate: new Date().toISOString(),\n        version: '1.0'\n      };\n      return dataToExport;\n    },\n    \n    importData: (data) => {\n      dispatch({ type: actionTypes.IMPORT_DATA, payload: data });\n    },\n    \n    resetData: () => {\n      if (window.confirm('Are you sure you want to reset all data? This action cannot be undone.')) {\n        dispatch({ type: actionTypes.RESET_DATA });\n        localStorage.removeItem('moneyManagerData');\n      }\n    }\n  };\n\n  const value = {\n    ...state,\n    ...calculations,\n    ...actions\n  };\n\n  return (\n    <FinanceContext.Provider value={value}>\n      {children}\n    </FinanceContext.Provider>\n  );\n};\n\n// Custom hook to use the finance context\nexport const useFinance = () => {\n  const context = useContext(FinanceContext);\n  if (!context) {\n    throw new Error('useFinance must be used within a FinanceProvider');\n  }\n  return context;\n};\n\nexport default FinanceContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}